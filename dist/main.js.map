{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/data.service.ts","webpack:///./src/app/game-detail.ts","webpack:///./src/app/game/game.component.css","webpack:///./src/app/game/game.component.html","webpack:///./src/app/game/game.component.ts","webpack:///./src/app/generic-filter.pipe.ts","webpack:///./src/app/login.service.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/main/main.component.css","webpack:///./src/app/main/main.component.html","webpack:///./src/app/main/main.component.ts","webpack:///./src/app/mygames/mygames.component.css","webpack:///./src/app/mygames/mygames.component.html","webpack:///./src/app/mygames/mygames.component.ts","webpack:///./src/app/mygames/toolbar.component.css","webpack:///./src/app/mygames/toolbar.component.html","webpack:///./src/app/mygames/toolbar.component.ts","webpack:///./src/app/profile/profile-dialog.css","webpack:///./src/app/profile/profile-dialog.html","webpack:///./src/app/profile/profile.component.css","webpack:///./src/app/profile/profile.component.html","webpack:///./src/app/profile/profile.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes} from '@angular/router';\nimport {MyGamesComponent} from './mygames/mygames.component';\nimport {GameComponent} from './game/game.component';\nimport { LoginComponent } from './login/login.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport {MainComponent} from './main/main.component';\n\nconst routes: Routes = [\n  {\n    path: 'game/:id/:context',\n    component: GameComponent\n  },\n  {\n    path: 'mygames/:id',\n    component: MyGamesComponent\n  },\n  {\n    path: '',\n    component: MainComponent\n  },\n  {\n    path: 'login',\n    component: LoginComponent\n  },\n  {\n    path: 'profile',\n    component: ProfileComponent\n  },\n// },\n// {\n//   path: '**',\n//   component: NotFoundComponent;\n// }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes)\n  ],\n  exports: [\n    RouterModule\n  ]\n})\nexport class AppRoutingModule {}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { MyGamesComponent } from './mygames/mygames.component';\nimport { GameComponent } from './game/game.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { MainComponent } from './main/main.component';\nimport { LoginComponent } from './login/login.component';\nimport { ProfileComponent, ProfileDialog } from './profile/profile.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport {MatButtonModule,\n  MatCardModule, MatTabsModule, MatDialogModule, MatProgressSpinnerModule,\n  MatDividerModule, MatListModule, MatIconModule, MatToolbarModule, MatMenuModule} from '@angular/material';\nimport { GenericFilterPipe } from './generic-filter.pipe';\nimport {GoogleLoginProvider, SocialLoginModule, AuthServiceConfig} from 'angular5-social-login';\nimport { ToolbarComponent } from './mygames/toolbar.component';\n\n@NgModule({\n  declarations: [\n    MyGamesComponent,\n    GameComponent,\n    MainComponent,\n    LoginComponent,\n    ProfileComponent,\n    ProfileDialog,\n    GenericFilterPipe,\n    ToolbarComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatButtonModule,\n    MatCardModule,\n    MatTabsModule,\n    MatDialogModule,\n    MatProgressSpinnerModule,\n    MatDividerModule,\n    MatListModule,\n    MatIconModule,\n    MatToolbarModule,\n    SocialLoginModule,\n    MatMenuModule\n  ],\n  providers: [{provide: AuthServiceConfig, useFactory: getAuthServiceConfigs}],\n  bootstrap: [MainComponent],\n  entryComponents: [ProfileDialog]\n})\n\nexport class AppModule { }\n// Configs\nexport function getAuthServiceConfigs() {\n  const config = new AuthServiceConfig(\n      [\n        {\n          id: GoogleLoginProvider.PROVIDER_ID,\n          provider: new GoogleLoginProvider('462871257136-hedggfdor0mchtgschjj2fuv4dfphamk.apps.googleusercontent.com')\n        }\n      ]);\n  return config;\n}\n","import { Injectable } from '@angular/core';\nimport { GameData, GameInfo } from './game-detail';\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n  gameList: GameInfo[] = null;\n  gameData: GameData = new GameData();\n  userList: String[] = [];\n\n  getGameDetails(userID): GameInfo[] {\n   this.gameList = [];\n   if (userID === 'kavitha') { return this.gameList; }\n   this.gameList.push({\n        active: true,\n        gameID: 'ID113',\n        players: [ 'kavi5712', 'Priya', 'Bank'],\n        active_since: new Date('2018-08-10')\n    });\n    this.gameList.push({\n      active: false,\n      gameID: 'ID123',\n      players: ['kavitha', 'Priya', 'kavi5712', 'Bank'],\n      active_since: new Date('2018-03-10')\n    });\n    this.gameList.push({\n      active: false,\n      gameID: 'ID143',\n      players: ['kavitha', 'Priya', 'kavi5712', 'kavin', 'Bank'],\n      active_since: new Date('2018-02-15')\n    });\n    return this.gameList;\n  }\n\n  getBoard(gameID: string): GameData {\n    this.gameData.gameInfo = {\n      active: false,\n      gameID: 'ID123',\n      players: ['kavitha', 'Priya', 'kavi5712', 'Bank'],\n      active_since: new Date('2018-03-10')\n    };\n    this.gameData.players = [{\n        playerID: 'kavi5712',\n        balance: 200\n      },\n      {\n        playerID: 'Priya',\n        balance: 250\n      },\n      {\n        playerID: 'Bank',\n        balance: 2500\n      }\n    ];\n    this.gameData.banker = 'kavi5712';\n    this.gameData.logs = [{\n      from: 'Bank',\n      to: 'Priya',\n      amount: 1500,\n      timestamp : new Date('2018-08-09')\n    },\n    {\n      from: 'Bank',\n      to: 'kavi5712',\n      amount: 1500,\n      timestamp : new Date('2018-08-09')\n    }];\n    return this.gameData;\n  }\n\n  checkAvailability(userID: String): Promise<Boolean> {\n    const response = new Promise<Boolean>((resolve, reject) => {\n      if ((userID === '') || (userID === undefined)) {\n        reject('UserID cannot be empty');\n      }\n      else{\n        resolve(true);\n      }\n    });\n    return response;\n  }\n\n  createProfile(userID: String): Promise<Boolean> {\n      const response = new Promise<Boolean>((resolve, reject) => {\n          setTimeout(() => {\n          this.userList.push(userID);\n          resolve(true);\n          }, 2000);\n      });\n      return response;\n  }\n\n  findUserID(userData) {\n    return null;\n  }\n}\n","export class GameData {\n    gameInfo: GameInfo;\n    logs: Transaction[];\n    players: Player[];\n    banker: string;\n}\n\nexport class Transaction {\n    from: string;\n    to: string;\n    amount: number;\n    timestamp: Date;\n}\n\nexport class Player {\n    playerID: string;\n    balance: number;\n}\n\nexport class GameInfo {\n    active_since: Date;\n    gameID: string;\n    active: boolean;\n    players: string[];\n}\n","module.exports = \"\"","module.exports = \"\\n<mat-tab-group>\\n\\t<mat-tab *ngFor='let player of gameDetail.players | genericFilter: player:\\\"playerID\\\":thisPlayer:true' (click)= \\\"switchContextTo(thisPlayer)\\\" label={{player.playerID}}>\\t\\n\\t\\t<h4>Balance: {{player.balance}}</h4>\\t\\t\\n\\t</mat-tab>\\n\\t<mat-tab *ngFor='let player of gameDetail.players | genericFilter: player:\\\"playerID\\\":\\\"Bank\\\":true'  (click)= \\\"switchContextTo('Bank')\\\" label={{player.playerID}}>\\t\\n\\t\\t<h4>Balance: {{player.balance}}</h4>\\t\\t\\n\\t</mat-tab>\\n</mat-tab-group>  \\n\\n<mat-card>\\n\\t\\t<mat-card-header>\\n\\t\\t\\t\\t<mat-card-title><b>Transfer</b></mat-card-title>\\n\\t\\t</mat-card-header>\\n\\t\\t<mat-card-content >\\n\\t\\t\\t\\t<mat-tab-group>\\n\\t\\t\\t\\t\\t\\t<mat-tab *ngFor='let player of gameDetail.players | genericFilter : \\\"player\\\":context:false' label={{player.playerID}}>\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t<h4 >{{player.balance}}</h4>\\t\\t\\n\\t\\t\\t\\t\\t\\t</mat-tab>\\n\\t\\t\\t\\t</mat-tab-group> \\n\\t\\t</mat-card-content>\\t\\t\\t\\t\\t\\t\\n</mat-card>\\t\\n<mat-card>\\n<mat-card-header>\\n\\t\\t<mat-card-title><b>Transactions</b></mat-card-title>\\n</mat-card-header>\\n<mat-card-content>\\t\\t\\t\\t\\t\\t\\t\\t\\t\\n\\t<ul *ngFor='let log of gameDetail.logs' >\\t\\n\\t\\t<p>{{log.timestamp.toLocaleString()}} : {{log.to}} received {{log.amount}} from {{log.from}}</p>\\n\\t</ul>\\t\\t\\t\\t\\n</mat-card-content>\\t\\n</mat-card>\\t\\t\\t\"","import { Component, OnInit } from '@angular/core';\nimport { DataService } from '../data.service';\nimport { GameData} from '../game-detail';\nimport { ActivatedRoute } from '@angular/router';\nimport { Location } from '@angular/common';\nimport { THIS_EXPR } from '@angular/compiler/src/output/output_ast';\n\n@Component({\n  selector: 'app-game',\n  templateUrl: './game.component.html',\n  styleUrls: ['./game.component.css'],\n})\n\nexport class GameComponent implements OnInit {\n  public gameDetail: GameData;\n  public gameID: string;\n  public context: string;\n  public thisPlayer: string;\n  private pathObj: any;\n  constructor(private dataService: DataService,\n              private route: ActivatedRoute,\n              private location: Location) { }\n\n  ngOnInit() {\n    this.route.paramMap.subscribe(obj => {\n      this.pathObj = obj;\n      this.gameID =  this.pathObj.params.id;\n      this.gameDetail = this.dataService.getBoard(this.gameID);\n      this.thisPlayer = this.pathObj.params.context;\n      if (this.gameDetail.banker === this.thisPlayer) {\n        this.context =  this.thisPlayer;\n      }\n      else {\n        this.context = null;\n      }\n    });\n  }\n\n  switchContextTo(toContext) {\n      this.context = toContext;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'genericFilter'\n})\nexport class GenericFilterPipe implements PipeTransform {\n  transform(allObject: any[], param: string, key: string, match: boolean = true): any {\n    if (match === true) {\n      return allObject.filter(obj => obj[param] === key);\n    }\n    else {\n      return allObject.filter(obj => obj[param] !== key);\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { AuthService, GoogleLoginProvider } from 'angular5-social-login';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class LoginService {\n\n  public socialPlatformProvider = GoogleLoginProvider.PROVIDER_ID;\n  constructor(private socialAuthService: AuthService ) { }\n\n  authenticate() {\n    return this.socialAuthService.signIn(this.socialPlatformProvider);\n  }\n\n  getUser() {\n    return this.socialAuthService.authState;\n  }\n\n  logout() {\n     this.socialAuthService.signOut().then((logoutdata) => {\n      console.log('Signing out..');\n    });\n  }\n}\n","module.exports = \"\\n\\n.payments {\\t\\n    position: relative;\\n    right:50%;\\n    left: 30%;\\n    top: 50.97%;\\n    bottom: 45.43%;   \\n    height: 3.6%;\\twidth: 41.87%;\\tcolor: #11BA78;\\tfont-family: \\\"Arial Rounded MT Bold\\\";\\tfont-size: 16px;\\tletter-spacing: 10px;\\tline-height: 24px;}\\n\"","module.exports = \"<body class='mat-app-background'>\\n<div class='payments'>\\n  PAYMENTS\\n</div>\\n<button mat-raised-button color=\\\"primary\\\" (click) = 'googleLogin()'>Google Login</button>\\n<button mat-raised-button color=\\\"primary\\\" (click) = 'fbLogin()' >FB Login</button>\\n</body>\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { LoginService } from '../login.service';\nimport { SocialUser } from 'angular5-social-login';\n\n\n// import * as oauth from 'oauth';\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  constructor(private router: Router, private loginService: LoginService) {\n   }\n\n  ngOnInit() {\n  }\n\n  googleLogin() {\n    console.log('googlelogin');\n    const response = this.loginService.authenticate().then((response:SocialUser) =>\n    {\n      this.router.navigate(['mygames', response.name], { replaceUrl: true });\n    });\n  }\n\n  fbLogin() {\n    console.log('fblogin');\n  }\n\n}\n","module.exports = \".background {\\n    height: 100%;\\t\\n    width: 100%;\\n    position: absolute;\\n}\"","module.exports = \"<router-outlet></router-outlet>\"","import { Component, OnInit, NgZone } from '@angular/core';\nimport { LoginService } from '../login.service';\nimport { Router } from '@angular/router';\nimport { DataService } from '../data.service';\n\n@Component({\n  selector: 'app-main',\n  templateUrl: './main.component.html',\n  styleUrls: ['./main.component.css']\n})\nexport class MainComponent implements OnInit {\n\n  constructor(private loginService: LoginService, private router: Router, private dataService: DataService, private ngZone: NgZone) { }\n  ngOnInit() {\n      this.loginService.getUser().subscribe((userData) =>\n      {\n        if (userData != null) {\n          const userID = this.dataService.findUserID(userData);\n          if (userID != null) {\n            this.ngZone.run(() => {\n              this.router.navigate(['mygames', userID], { replaceUrl: true });\n            });\n          }\n          else {\n            this.ngZone.run(() => {\n              this.router.navigate(['profile'], { replaceUrl: true });\n            });\n          }\n        }\n        else {\n          this.ngZone.run(() => {\n            this.router.navigate(['login'], { replaceUrl: true });\n          });\n        }\n      });\n  }\n}\n","module.exports = \".nogame{\\n    display:flex;\\n    flex-direction: column;\\n    align-content: space-around;\\n}\\n\"","module.exports = \"<toolbar context = \\\"MY GAMES\\\" > </toolbar>\\n<mat-tab-group >\\n\\t<mat-tab label=\\\"Active\\\">\\n\\t\\t<div class='nogame' *ngIf='(gameList|genericFilter:\\\"active\\\":true).length == 0'> \\n\\t\\t\\t\\t<span>Start playing by tapping</span>\\n\\t\\t\\t\\t<mat-icon mat-list-icon>add</mat-icon>\\n\\t\\t\\t\\t<span>icon on top</span>\\n\\t\\t</div>\\n\\t\\t<mat-list>\\n\\t\\t\\t\\t<mat-list-item *ngFor='let gameInfo of gameList|genericFilter:\\\"active\\\":true' routerLink='/game/{{gameInfo.gameID}}/{{thisPlayer}}'>\\n\\t\\t\\t\\t\\t<mat-icon mat-list-icon>group</mat-icon>\\n\\t\\t\\t\\t\\t<h4 mat-line>{{gameInfo.gameID}}</h4>\\n\\t\\t\\t\\t\\t<p mat-line> You and \\n\\t\\t\\t\\t\\t\\t\\t<span id='player_gist' *ngIf=\\\"gameInfo.players.length > 3\\\"> {{gameInfo.players.length - 2}} friends </span>\\n\\t\\t\\t\\t\\t\\t\\t<span id='player_gist' *ngIf=\\\"gameInfo.players.length <= 3\\\">{{getPlayerGist(gameInfo.players)}}</span>\\n\\t\\t\\t\\t\\t\\t\\t<span style='float:right;' id='created_on'>{{gameInfo.active_since | date}}</span> </p>\\n\\t\\t\\t\\t\\t<mat-divider></mat-divider>\\n\\t\\t\\t\\t</mat-list-item>\\n\\t\\t</mat-list>\\n\\t</mat-tab>\\n\\t<mat-tab label=\\\"Completed\\\">\\n\\t\\t\\t<div class='nogame' *ngIf='(gameList|genericFilter:\\\"active\\\":true).length == 0'> \\n\\t\\t\\t\\t\\t<span>Start playing by tapping</span>\\n\\t\\t\\t\\t\\t<mat-icon mat-list-icon>add</mat-icon>\\n\\t\\t\\t\\t\\t<span>icon on top</span>\\n\\t\\t\\t</div>\\n\\t\\t\\t<mat-list>\\n\\t\\t\\t\\t\\t<mat-list-item *ngFor='let gameInfo of gameList|genericFilter:\\\"active\\\":false' routerLink='/game/{{gameInfo.gameID}}/{{thisPlayer}}'>\\n\\t\\t\\t\\t\\t\\t<mat-icon mat-list-icon>group</mat-icon>\\n\\t\\t\\t\\t\\t\\t<h4 mat-line>{{gameInfo.gameID}}</h4>\\n\\t\\t\\t\\t\\t\\t<p mat-line> You and \\n\\t\\t\\t\\t\\t\\t\\t\\t<span id='player_gist' *ngIf=\\\"gameInfo.players.length > 3\\\"> {{gameInfo.players.length - 2}} friends </span>\\n\\t\\t\\t\\t\\t\\t\\t\\t<span id='player_gist' *ngIf=\\\"gameInfo.players.length <= 3\\\">{{getPlayerGist(gameInfo.players)}}</span>\\n\\t\\t\\t\\t\\t\\t\\t\\t<span style='float:right;' id='created_on'>{{gameInfo.active_since | date}}</span> </p>\\n\\t\\t\\t\\t\\t\\t<mat-divider></mat-divider>\\n\\t\\t\\t\\t\\t</mat-list-item>\\n\\t\\t\\t</mat-list>\\n\\t</mat-tab>\\n</mat-tab-group>\\n\"","import { Component, OnInit, Input } from '@angular/core';\nimport { DataService } from '../data.service';\nimport { GameInfo } from '../game-detail';\nimport { ActivatedRoute } from '@angular/router';\nimport { LoginService } from '../login.service';\nimport { SocialUser } from 'angular5-social-login';\n\n@Component({\n  selector: 'my-games',\n  templateUrl: './mygames.component.html',\n  styleUrls: ['./mygames.component.css']\n  })\nexport class MyGamesComponent implements OnInit {\n  constructor(private dataService:DataService, private route: ActivatedRoute, private loginService: LoginService) {\n  }\n  public gameList: GameInfo[];\n  public thisPlayer: string;\n  public otherPlayers: string;\n  public userData: SocialUser;\n\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n        const userID = params.id;\n        this.gameList = this.dataService.getGameDetails(userID);\n        this.loginService.getUser().subscribe((userData) => {this.userData = userData;});\n        console.log(this.gameList);\n        this.thisPlayer = userID;\n    });\n  }\n\n  getPlayerGist(playerList){\n    return playerList.filter(player => ((player !== this.thisPlayer) && (player !== 'Bank')));\n  }\n}","module.exports = \".toolbar{\\n    display: flex;\\n    justify-content: space-between;\\n    align-items: center;\\n    background-color: #232C3D;\\n    position: relative;\\n    z-index: 2;\\n    box-shadow: 0 2px 4px 0 #212431;\\n}\\n\\n.context {\\n    color:#11BA78;\\n}\\n\\n.mat-menu-item{\\n    color:#CCCCCC;\\n}\\n\\n.profile_pic {\\n    width: 30px;\\n    border-radius: 50%;   \\n    background-repeat: no-repeat;\\n    background-position: center center;\\n    background-size: cover;    \\n  }  \"","module.exports = \"<mat-toolbar class='toolbar'>\\n    <img class='profile_pic' [src]='profile_path'/>\\n    <span class='context'>{{context}}</span>\\n    <span [matMenuTriggerFor]=\\\"menu\\\" ><mat-icon mat-list-icon>add</mat-icon></span>\\n</mat-toolbar>\\n<mat-menu #menu=\\\"matMenu\\\">\\n        <button mat-menu-item>Create new game</button>\\n        <mat-divider> </mat-divider>\\n        <button mat-menu-item>Join existing game</button>\\n</mat-menu>\"","import { Component, OnInit, Input } from '@angular/core';\nimport { LoginService } from '../login.service';\nimport { SocialUser } from 'angular5-social-login';\n\n@Component({\n  selector: 'toolbar',\n  templateUrl: './toolbar.component.html',\n  styleUrls: ['./toolbar.component.css']\n})\n\nexport class ToolbarComponent implements OnInit {\n  public profile_path = '../../assets/images/pictures/0.jpg';\n  constructor(private loginService: LoginService) { }\n  userData:SocialUser;\n  @Input() context = '';\n  ngOnInit() {\n    this.loginService.getUser().subscribe((userData) => this.userData = userData);\n    this.profile_path = this.userData.image;\n  }\n\n  addGame() {\n    \n  }\n\n}\n","module.exports = \".profile_pic {\\n    width: 80%;\\n    border-radius: 50%;   \\n    background-repeat: no-repeat;\\n    background-position: center center;\\n    background-size: cover;    \\n  }  \\n\\n.dialog_container{\\n    display: flex;\\n    flex-direction: column;\\n    align-items: center;\\n}  \\n\\n.spinner{\\n    display: flex;\\n    flex-direction: column;\\n    align-items: center;\\n}\"","module.exports = \"<div >\\n    <h1 mat-dialog-title class='dialog_container'>Give yourself a cool player name</h1>\\n    <div mat-dialog-content class='dialog_container'>\\n        <span><img class='profile_pic' [src]='profile_path'/></span>  \\n        <h3>{{userData.name}}</h3>\\n        <p style=\\\"font-size : 14px;\\\">Player name should be 4 -12 characters long; no special characters and spaces allowed. </p>\\n        <input placeholder= 'CoolJack' matInput [(ngModel)] = \\\"userID\\\"/>\\n    </div>\\n    <span *ngIf=\\\"registering == 'nostart'\\\" mat-dialog-actions class='dialog_container'>\\n            <button mat-raised-button color='primary' (click)=\\\"register(userID)\\\" cdkFocusInitial>CONTINUE</button>\\n            <span *ngIf='reason'>{{reason}}</span>\\n    </span>\\n    <span *ngIf=\\\"registering == 'start'\\\" mat-dialog-actions class='spinner'>\\n            <mat-progress-spinner diameter='40'\\n            color=\\\"accent\\\"\\n            mode=\\\"indeterminate\\\">\\n            </mat-progress-spinner>\\n    </span>\\n   \\n</div> \\n\"","module.exports = \".welcome {\\t\\n   color: #11BA78;\\tfont-family: \\\"Arial Rounded MT Bold\\\";\\tfont-size: 16px;\\tletter-spacing: 10px;\\tline-height: 24px;}\\n\\n  \"","module.exports = \"<body>\\n  <div class='welcome'>Welcome to Monopoly Payments</div>\\n</body>\"","import { Component, OnInit, NgZone } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material';\nimport { DataService } from '../data.service';\nimport { Router } from '@angular/router';\nimport { LoginService } from '../login.service';\n@Component({\n  selector: 'profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n  userID = null;\n  dialogRef = null;\n  constructor(public dialog: MatDialog) {\n  }\n  ngOnInit(){\n    setTimeout(() => {\n      const dialogOptions = {\n        width: '80%',\n        height: '70%',\n        hasBackdrop: false,\n        disableClose: true,\n      };\n      this.dialogRef = this.dialog.open(ProfileDialog, dialogOptions);\n    }, 20);\n  }\n}\n\n@Component({\n  selector: 'profile-dialog',\n  templateUrl: './profile-dialog.html',\n  styleUrls: ['./profile-dialog.css']\n})\nexport class ProfileDialog implements OnInit {\n  reason = '';\n  registering = 'nostart';\n  format = /[ !@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?]+/;\n\n  constructor(\n    public dialogRef: MatDialogRef<ProfileDialog>,\n    private dataService: DataService,\n    private router: Router,\n    private loginService: LoginService,\n    private ngZone: NgZone) {}\n    public profile_path = '../../assets/images/pictures/0.jpg';\n    public userData = null;\n    ngOnInit() {\n      this.loginService.getUser().subscribe((userData) => {\n      this.userData = userData;\n      this.profile_path = userData.image;\n     });\n    }\n\n    register(userID: string) {\n      if ((userID === '') || (userID === undefined)){\n        this.reason = 'User ID cannot be empty';\n      }\n      else if ((userID.length  < 4) || (userID.length > 12)){\n        this.reason = 'Length must be between 4 - 12';\n      }\n      else if(this.format.test(userID)) {\n        this.reason = 'Space & special characters not allowed';\n      }\n      else {\n        this.dataService.checkAvailability(userID).then(valid => {\n          if (valid) {\n            this.registering = 'start';\n            this.dataService.createProfile(userID).then(response => {\n              this.dialogRef.close();\n              this.ngZone.run(() => {\n                this.router.navigate(['mygames', userID], { replaceUrl: true });\n              });\n            });\n          }\n        }).catch(err => this.reason = err);\n      }\n  }\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}