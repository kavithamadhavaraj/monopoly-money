{"version":3,"sources":["webpack:///(webpack)/buildin/global.js","webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/data.service.ts","webpack:///./src/app/game-detail.ts","webpack:///./src/app/game/game.component.css","webpack:///./src/app/game/game.component.html","webpack:///./src/app/game/game.component.ts","webpack:///./src/app/generic-filter.pipe.ts","webpack:///./src/app/login.service.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/main/main.component.css","webpack:///./src/app/main/main.component.html","webpack:///./src/app/main/main.component.ts","webpack:///./src/app/mygames/create-game-dialog.component.css","webpack:///./src/app/mygames/create-game-dialog.component.html","webpack:///./src/app/mygames/mygames.component.css","webpack:///./src/app/mygames/mygames.component.html","webpack:///./src/app/mygames/mygames.component.ts","webpack:///./src/app/mygames/toolbar.component.css","webpack:///./src/app/mygames/toolbar.component.html","webpack:///./src/app/mygames/toolbar.component.ts","webpack:///./src/app/profile/profile.component.css","webpack:///./src/app/profile/profile.component.html","webpack:///./src/app/profile/profile.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\r\n} catch (e) {\r\n\t// This works if the window reference is available\r\n\tif (typeof window === \"object\") g = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes} from '@angular/router';\nimport {MyGamesComponent} from './mygames/mygames.component';\nimport {GameComponent} from './game/game.component';\nimport { LoginComponent } from './login/login.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport {MainComponent} from './main/main.component';\n\nconst routes: Routes = [\n  {\n    path: 'game/:id/:context',\n    component: GameComponent\n  },\n  {\n    path: 'mygames/:id',\n    component: MyGamesComponent\n  },\n  {\n    path: '',\n    component: MainComponent\n  },\n  {\n    path: 'login',\n    component: LoginComponent\n  },\n  {\n    path: 'profile',\n    component: ProfileComponent\n  },\n// },\n// {\n//   path: '**',\n//   component: NotFoundComponent;\n// }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes)\n  ],\n  exports: [\n    RouterModule\n  ]\n})\nexport class AppRoutingModule {}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MyGamesComponent } from './mygames/mygames.component';\nimport { GameComponent } from './game/game.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { MainComponent } from './main/main.component';\nimport { LoginComponent } from './login/login.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatButtonModule, MatCardModule, MatTabsModule, MatDialogModule,\n        MatProgressSpinnerModule, MatDividerModule, MatListModule,\n        MatIconModule, MatToolbarModule, MatMenuModule,\n        MatFormFieldModule, MatInputModule} from '@angular/material';\nimport { GenericFilterPipe } from './generic-filter.pipe';\nimport { GoogleLoginProvider, SocialLoginModule, AuthServiceConfig, FacebookLoginProvider} from 'angular5-social-login';\nimport { ToolbarComponent, CreateGameDialog } from './mygames/toolbar.component';\nimport { ErrorStateMatcher, ShowOnDirtyErrorStateMatcher } from '@angular/material';\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport { environment } from '../environments/environment';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  declarations: [\n    MyGamesComponent,\n    GameComponent,\n    MainComponent,\n    LoginComponent,\n    ProfileComponent,\n    CreateGameDialog,\n    GenericFilterPipe,\n    ToolbarComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatButtonModule,\n    MatCardModule,\n    MatTabsModule,\n    MatDialogModule,\n    MatProgressSpinnerModule,\n    MatDividerModule,\n    MatListModule,\n    MatIconModule,\n    MatToolbarModule,\n    SocialLoginModule,\n    MatMenuModule,\n    MatFormFieldModule,\n    MatInputModule,\n    ServiceWorkerModule.register('ngsw-worker.js', { enabled: environment.production })\n  ],\n  providers: [\n    {provide: AuthServiceConfig, useFactory: getAuthServiceConfigs},\n    {provide: ErrorStateMatcher, useClass: ShowOnDirtyErrorStateMatcher}\n  ],\n  bootstrap: [MainComponent],\n  entryComponents: [CreateGameDialog]\n})\n\nexport class AppModule { }\n// Configs\nexport function getAuthServiceConfigs() {\n  const config = new AuthServiceConfig(\n      [\n        {\n          id: GoogleLoginProvider.PROVIDER_ID,\n          // TODO: Move this key to a separate config file\n          provider: new GoogleLoginProvider(environment.google_client_id)\n        },\n        {\n          id: FacebookLoginProvider.PROVIDER_ID,\n          // TODO: Move this key to a separate config file\n          provider: new FacebookLoginProvider(environment.facebook_client_id)\n        }\n      ]);\n  return config;\n}\n","import { Injectable } from '@angular/core';\nimport { GameData, GameInfo } from './game-detail';\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n  gameList: GameInfo[] = null;\n  gameData: GameData = new GameData();\n  userList: String[] = [];\n\n  getGameDetails(userID): GameInfo[] {\n   this.gameList = [];\n   if (userID === 'kavitha') { return this.gameList; }\n   this.gameList.push({\n        active: false,\n        gameID: 'ID113',\n        players: [ 'kavi5712', 'Priya', 'Bank'],\n        active_since: new Date('2018-08-10')\n    });\n    this.gameList.push({\n      active: false,\n      gameID: 'ID123',\n      players: ['kavitha', 'Priya', 'kavi5712', 'Bank'],\n      active_since: new Date('2018-03-10')\n    });\n    this.gameList.push({\n      active: false,\n      gameID: 'ID143',\n      players: ['kavitha', 'Priya', 'kavi5712', 'kavin', 'Bank'],\n      active_since: new Date('2018-02-15')\n    });\n    return this.gameList;\n  }\n\n  getBoard(gameID: string): GameData {\n    this.gameData.gameInfo = {\n      active: false,\n      gameID: 'ID123',\n      players: ['kavitha', 'Priya', 'kavi5712', 'Bank'],\n      active_since: new Date('2018-03-10')\n    };\n    this.gameData.players = [{\n        playerID: 'kavi5712',\n        balance: 200\n      },\n      {\n        playerID: 'Priya',\n        balance: 250\n      },\n      {\n        playerID: 'Bank',\n        balance: 2500\n      }\n    ];\n    this.gameData.banker = 'kavi5712';\n    this.gameData.logs = [{\n      from: 'Bank',\n      to: 'Priya',\n      amount: 1500,\n      timestamp : new Date('2018-08-09')\n    },\n    {\n      from: 'Bank',\n      to: 'kavi5712',\n      amount: 1500,\n      timestamp : new Date('2018-08-09')\n    }];\n    return this.gameData;\n  }\n\n  checkAvailability(userID: String): Promise<boolean> {\n    const response = new Promise<boolean>((resolve, reject) => {\n      if ((userID === '') || (userID === undefined)) {\n        reject('UserID cannot be empty');\n      }\n      else{\n        resolve(true);\n      }\n    });\n    return response;\n  }\n\n  checkGameAvailability(gameName: String): Promise<boolean> {\n    const response = new Promise<boolean>((resolve, reject) => {\n      if ((gameName === '') || (gameName === undefined)) {\n        reject('Game name cannot be empty');\n      }\n      else{\n        resolve(true);\n      }\n    });\n    return response;\n  }\n\n  createProfile(userID: String): Promise<boolean> {\n      const response = new Promise<boolean>((resolve, reject) => {\n          setTimeout(() => {\n          this.userList.push(userID);\n          resolve(true);\n          }, 2000);\n      });\n      return response;\n  }\n\n  createGame(gameName: String): Promise<boolean> {\n    const response = new Promise<boolean>((resolve, reject) => {\n        setTimeout(() => {\n        //this.userList.push(gameName);\n        resolve(true);\n        }, 2000);\n    });\n    return response;\n}\n\n  findUserID(userData) {\n    return null;\n  }\n}\n","export class GameData {\n    gameInfo: GameInfo;\n    logs: Transaction[];\n    players: Player[];\n    banker: string;\n}\n\nexport class Transaction {\n    from: string;\n    to: string;\n    amount: number;\n    timestamp: Date;\n}\n\nexport class Player {\n    playerID: string;\n    balance: number;\n}\n\nexport class GameInfo {\n    active_since: Date;\n    gameID: string;\n    active: boolean;\n    players: string[];\n}\n","module.exports = \"\"","module.exports = \"\\n<mat-tab-group>\\n\\t<mat-tab *ngFor='let player of gameDetail.players | genericFilter: player:\\\"playerID\\\":thisPlayer:true' (click)= \\\"switchContextTo(thisPlayer)\\\" label={{player.playerID}}>\\t\\n\\t\\t<h4>Balance: {{player.balance}}</h4>\\t\\t\\n\\t</mat-tab>\\n\\t<mat-tab *ngFor='let player of gameDetail.players | genericFilter: player:\\\"playerID\\\":\\\"Bank\\\":true'  (click)= \\\"switchContextTo('Bank')\\\" label={{player.playerID}}>\\t\\n\\t\\t<h4>Balance: {{player.balance}}</h4>\\t\\t\\n\\t</mat-tab>\\n</mat-tab-group>  \\n\\n<mat-card>\\n\\t\\t<mat-card-header>\\n\\t\\t\\t\\t<mat-card-title><b>Transfer</b></mat-card-title>\\n\\t\\t</mat-card-header>\\n\\t\\t<mat-card-content >\\n\\t\\t\\t\\t<mat-tab-group>\\n\\t\\t\\t\\t\\t\\t<mat-tab *ngFor='let player of gameDetail.players | genericFilter : \\\"player\\\":context:false' label={{player.playerID}}>\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t<h4 >{{player.balance}}</h4>\\t\\t\\n\\t\\t\\t\\t\\t\\t</mat-tab>\\n\\t\\t\\t\\t</mat-tab-group> \\n\\t\\t</mat-card-content>\\t\\t\\t\\t\\t\\t\\n</mat-card>\\t\\n<mat-card>\\n<mat-card-header>\\n\\t\\t<mat-card-title><b>Transactions</b></mat-card-title>\\n</mat-card-header>\\n<mat-card-content>\\t\\t\\t\\t\\t\\t\\t\\t\\t\\n\\t<ul *ngFor='let log of gameDetail.logs' >\\t\\n\\t\\t<p>{{log.timestamp.toLocaleString()}} : {{log.to}} received {{log.amount}} from {{log.from}}</p>\\n\\t</ul>\\t\\t\\t\\t\\n</mat-card-content>\\t\\n</mat-card>\\t\\t\\t\"","import { Component, OnInit } from '@angular/core';\nimport { DataService } from '../data.service';\nimport { GameData} from '../game-detail';\nimport { ActivatedRoute } from '@angular/router';\nimport { Location } from '@angular/common';\nimport { THIS_EXPR } from '@angular/compiler/src/output/output_ast';\n\n@Component({\n  selector: 'app-game',\n  templateUrl: './game.component.html',\n  styleUrls: ['./game.component.css'],\n})\n\nexport class GameComponent implements OnInit {\n  public gameDetail: GameData;\n  public gameID: string;\n  public context: string;\n  public thisPlayer: string;\n  private pathObj: any;\n  constructor(private dataService: DataService,\n              private route: ActivatedRoute,\n              private location: Location) { }\n\n  ngOnInit() {\n    this.route.paramMap.subscribe(obj => {\n      this.pathObj = obj;\n      this.gameID =  this.pathObj.params.id;\n      this.gameDetail = this.dataService.getBoard(this.gameID);\n      this.thisPlayer = this.pathObj.params.context;\n      if (this.gameDetail.banker === this.thisPlayer) {\n        this.context =  this.thisPlayer;\n      }\n      else {\n        this.context = null;\n      }\n    });\n  }\n\n  switchContextTo(toContext) {\n      this.context = toContext;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'genericFilter'\n})\nexport class GenericFilterPipe implements PipeTransform {\n  transform(allObject: any[], param: string, key: string, match: boolean = true): any {\n    if (match === true) {\n      return allObject.filter(obj => obj[param] === key);\n    }\n    else {\n      return allObject.filter(obj => obj[param] !== key);\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { AuthService, GoogleLoginProvider, FacebookLoginProvider } from 'angular5-social-login';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class LoginService {\n  public googleProvider = GoogleLoginProvider.PROVIDER_ID;\n  public facebookProvider = FacebookLoginProvider.PROVIDER_ID;\n  public socialPlatformProvider = null;\n  constructor(private socialAuthService: AuthService ) { }\n\n  authenticate(provider) {\n    if (provider === 'google') {\n      this.socialPlatformProvider = this.googleProvider;\n    } else if (provider === 'facebook') {\n      this.socialPlatformProvider = this.facebookProvider;\n    }\n    return this.socialAuthService.signIn(this.socialPlatformProvider);\n  }\n\n  getUser() {\n    return this.socialAuthService.authState;\n  }\n\n  logout() {\n     this.socialAuthService.signOut().then((logoutdata) => {\n      console.log('Signing out..');\n    });\n  }\n}\n","module.exports = \"body{\\n    background-image: url('transparent_background.png');\\n}\\n.flex_container{\\n    display: flex;\\n    flex-direction: column;\\n    align-items: center;\\n    justify-content: stretch;\\n}\\nimg{\\n    height: 20%;\\n    width: 50%;\\n    margin: 35%;\\n}\\nbutton{\\n    margin: 4%;\\n    height: 6.6%;\\n    width: 90%;\\n    border-radius: 4px;\\n    box-shadow: 0 2px 4px 0 rgba(0,0,0,0.5);\\n    color: #FFFFFF;\\n    font-size: 16px;\\tfont-weight: 600;\\t\\n}\\n#redbutton{\\n    background-color: #EA4335;\\n}\\n#bluebutton{\\n    background-color: #4267B2;\\n}\\nmat-icon{\\n    float:left;\\n    padding:2%;\\n}\"","module.exports = \"<body>\\n<div class='flex_container'>\\n<img src='../../assets/images/logo.png'/>\\n<button mat-raised-button id='redbutton' (click) = 'googleLogin()'>\\n        <mat-icon svgIcon='google-icon'></mat-icon> SIGN IN USING GOOGLE\\n</button>\\n<button mat-raised-button id='bluebutton' (click) = 'fbLogin()' >\\n        <mat-icon svgIcon='facebook-icon'></mat-icon> SIGN IN USING FACEBOOK\\n</button>\\n</div>\\n</body>\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { LoginService } from '../login.service';\nimport { SocialUser } from 'angular5-social-login';\nimport { MatIconRegistry } from '@angular/material';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n// import * as oauth from 'oauth';\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  constructor(private router: Router, private iconRegistry: MatIconRegistry, \n    private loginService: LoginService, private sanitizer: DomSanitizer) {\n      this.iconRegistry.addSvgIcon('google-icon', this.sanitizer.bypassSecurityTrustResourceUrl('../../assets/icons/blood-sample.svg'));\n      this.iconRegistry.addSvgIcon('facebook-icon', this.sanitizer.bypassSecurityTrustResourceUrl('../../assets/icons/blood-sample.svg'));\n      this.iconRegistry.getNamedSvgIcon('google-icon').subscribe((e) => {console.log(e); });\n   }\n\n  ngOnInit() {\n  }\n\n  googleLogin() {\n    console.log('googlelogin');\n    this.loginService.authenticate('google').then((response: SocialUser) => {\n      this.router.navigate(['mygames', response.name], { replaceUrl: true });\n    });\n  }\n\n  fbLogin() {\n    console.log('fblogin');\n    this.loginService.authenticate('facebook').then((response: SocialUser) => {\n      this.router.navigate(['mygames', response.name], { replaceUrl: true });\n    });\n  }\n\n}\n","module.exports = \".background {\\n    height: 100%;\\t\\n    width: 100%;\\n    position: absolute;\\n}\"","module.exports = \"<router-outlet></router-outlet>\"","import { Component, OnInit, NgZone } from '@angular/core';\nimport { LoginService } from '../login.service';\nimport { Router } from '@angular/router';\nimport { DataService } from '../data.service';\n\n@Component({\n  selector: 'app-main',\n  templateUrl: './main.component.html',\n  styleUrls: ['./main.component.css']\n})\nexport class MainComponent implements OnInit {\n\n  constructor(private loginService: LoginService, private router: Router, private dataService: DataService, private ngZone: NgZone) { }\n  ngOnInit() {\n      this.loginService.getUser().subscribe((userData) => {\n        if (userData != null) {\n          const userID = this.dataService.findUserID(userData);\n          if (userID != null) {\n            this.ngZone.run(() => {\n              this.router.navigate(['mygames', userID], { replaceUrl: true });\n            });\n          } else {\n            this.ngZone.run(() => {\n              this.router.navigate(['profile'], { replaceUrl: true });\n            });\n          }\n        } else {\n          this.ngZone.run(() => {\n            this.router.navigate(['login'], { replaceUrl: true });\n          });\n        }\n      });\n  }\n}\n","module.exports = \".spinner{\\n    display: flex;\\n    flex-direction: column;\\n    align-items: center;\\n    margin: 5px;\\n}\\n\\n.mat-error{\\n    color: #f44336;\\tfont-size: 12px;\\tfont-style: italic;\\tline-height: 18px;\\n}\\n\\n.mat-hint{\\n    color: #11BA78;\\tfont-size: 12px;\\tfont-style: italic;\\tline-height: 18px;\\n}\\n\\n.placeholder{\\n    color:#CCCCCC;\\n    font-weight: 600;\\tline-height: 21px;\\n}\\n\\nh1.mat-dialog-title{\\n    padding-left: 5%;\\n    padding-right: 5%;\\n    color: #FFFFFF;\\tfont-family: Barlow;\\tfont-size: 16px;\\tfont-weight: 600;\\tline-height: 30px;\\ttext-align: center; \\n}\\n\\n#register{\\n    border-radius: 4px;\\n    width:100%;\\n    margin-top: 10%;\\n}\\n\\n.flex_container{\\n    display: flex;\\n    flex-direction: column;\\n    color: #cccccc;\\t   \\n    overflow: visible;    \\n}\\n\\n.mat-form-field-appearance-legacy .mat-form-field-wrapper{\\n    margin-bottom: 28%;\\n}\"","module.exports = \"\\n<h1 mat-dialog-title ><mat-icon (click)=closeDialog()>close</mat-icon>Create new game</h1>\\n<div mat-dialog-content class='flex_container'>\\n    <mat-form-field>\\n        <input tabindex=\\\"0\\\" matInput #input minlength='4' maxlength=\\\"20\\\" [formControl]=\\\"gameName\\\">\\n        <mat-placeholder class='placeholder'>Game name</mat-placeholder>\\n        <span matSuffix>{{input.value?.length || 0}}/20</span>\\n        <mat-error *ngIf=\\\"gameName.invalid\\\">\\n            <img style=\\\"position:absolute;\\\" src='../../assets/icons/error.png'/>\\n            <div style=\\\"margin-left:10%;\\\">{{getErrorMessage()}}</div>\\n        </mat-error>\\n        <mat-hint *ngIf=\\\"!gameName.invalid && available\\\"> \\n            <img style=\\\"position:absolute;\\\" src='../../assets/icons/success.png'/>\\n            <div style=\\\"margin-left:18%;  width: 100%;\\\">Game name available!</div>\\n        </mat-hint>\\n    </mat-form-field> \\n</div>\\n<span *ngIf=\\\"registering == 'start'\\\" mat-dialog-actions class='spinner flex_container'>\\n        <mat-progress-spinner diameter='40' color=\\\"accent\\\" mode=\\\"indeterminate\\\"></mat-progress-spinner>\\n</span>\\n<span *ngIf=\\\"registering == 'nostart'\\\" mat-dialog-actions class='flex_container'>\\n        <button mat-raised-button id='register' color='primary' [disabled]='!gameName.valid' (click)= \\\"register(input.value)\\\"> LET'S ROLL </button>           \\n</span>\\n\\n\\n\"","module.exports = \".nogame-container{\\n    display: flex;\\n    flex-direction: column;\\n    align-items: center;\\n}\\n\\n#monopoly-man{\\n    margin-top: 30%;\\n    margin-bottom: 5%;\\n}\\n\\n.nogame{\\n    font-size: 16px;\\n    font-weight: 600;\\n    line-height: 24px;\\n    text-align: center;\\n    color: #AAAAAA;\\n    padding: 1.5%;\\n}\\n\\n#player_gist{\\n    color: #AAAAAA;\\n    font-size: 14px;\\n    font-weight: 600;\\n    line-height: 21px;\\n}\\n\\n#game_id{\\n    color: #EEEEEE;\\t\\n    font-size: 16px;\\n    font-weight: 600;\\n    line-height: 30px;\\n}\"","module.exports = \"<toolbar context = \\\"MY GAMES\\\" > </toolbar>\\n<mat-tab-group >\\n\\t<mat-tab label=\\\"Active\\\">\\n\\t\\t<div class='nogame-container' *ngIf='(gameList|genericFilter:\\\"active\\\":true).length == 0'> \\n\\t\\t\\t\\t<img id=\\\"monopoly-man\\\" src='../../assets/images/monopoly-man.png'/>\\n\\t\\t\\t\\t<span class='nogame'>Start playing by tapping</span>\\n\\t\\t\\t\\t<img src='../../assets/icons/add_new.png'/>\\n\\t\\t\\t\\t<span class='nogame'>icon on top</span>\\n\\t\\t</div>\\n\\t\\t<mat-list>\\n\\t\\t\\t\\t<mat-list-item *ngFor='let gameInfo of gameList|genericFilter:\\\"active\\\":true' routerLink='/game/{{gameInfo.gameID}}/{{thisPlayer}}'>\\n\\t\\t\\t\\t\\t<h4 mat-line id='game_id'>{{gameInfo.gameID}}</h4>\\n\\t\\t\\t\\t\\t<p mat-line id='player_gist'> \\n\\t\\t\\t\\t\\t\\t<img style = 'margin-right: 1.5%;\\n\\t\\t\\t\\t\\t\\tmargin-top: 1%;' src='../../assets/icons/player_icon.png'/>  You and \\n\\t\\t\\t\\t\\t\\t<span *ngIf=\\\"gameInfo.players.length > 3\\\"> {{gameInfo.players.length - 2}} friends </span>\\n\\t\\t\\t\\t\\t\\t<span *ngIf=\\\"gameInfo.players.length <= 3\\\">{{getPlayerGist(gameInfo.players)}}</span>\\n\\t\\t\\t\\t\\t\\t<span style='float:right;' id='created_on'>{{gameInfo.active_since | date}}</span>\\n\\t\\t\\t\\t\\t</p>\\n\\t\\t\\t\\t\\t<mat-divider></mat-divider>\\n\\t\\t\\t\\t</mat-list-item>\\n\\t\\t</mat-list>\\n\\t</mat-tab>\\n\\t<mat-tab label=\\\"Completed\\\">\\n\\t\\t\\t<div class='nogame-container' *ngIf='(gameList|genericFilter:\\\"active\\\":false).length == 0'> \\n\\t\\t\\t\\t\\t<img id=\\\"monopoly-man\\\" src='../../assets/images/monopoly-man.png'/>\\n\\t\\t\\t\\t\\t<span class='nogame'>Start playing by tapping</span>\\n\\t\\t\\t\\t\\t<img src='../../assets/icons/add_new.png'/>\\n\\t\\t\\t\\t\\t<span class='nogame'>icon on top</span>\\n\\t\\t\\t</div>\\n\\t\\t\\t<mat-list>\\n\\t\\t\\t\\t\\t<mat-list-item *ngFor='let gameInfo of gameList|genericFilter:\\\"active\\\":false' routerLink='/game/{{gameInfo.gameID}}/{{thisPlayer}}'>\\n\\t\\t\\t\\t\\t\\t<h4 mat-line id='game_id'>{{gameInfo.gameID}}</h4>\\n\\t\\t\\t\\t\\t\\t<p mat-line id='player_gist'> \\n\\t\\t\\t\\t\\t\\t\\t<img style = 'margin-right: 1.5%;\\n\\t\\t\\t\\t\\t\\t\\tmargin-top: 1%;' src='../../assets/icons/player_icon.png'/> You and \\n\\t\\t\\t\\t\\t\\t\\t\\t<span *ngIf=\\\"gameInfo.players.length > 3\\\"> {{gameInfo.players.length - 2}} friends </span>\\n\\t\\t\\t\\t\\t\\t\\t\\t<span *ngIf=\\\"gameInfo.players.length <= 3\\\">{{getPlayerGist(gameInfo.players)}}</span>\\n\\t\\t\\t\\t\\t\\t\\t\\t<span style='float:right;' id='created_on'>{{gameInfo.active_since | date}}</span> </p>\\n\\t\\t\\t\\t\\t\\t<mat-divider></mat-divider>\\n\\t\\t\\t\\t\\t</mat-list-item>\\n\\t\\t\\t</mat-list>\\n\\t</mat-tab>\\n</mat-tab-group>\\n\"","import { Component, OnInit, Input } from '@angular/core';\nimport { DataService } from '../data.service';\nimport { GameInfo } from '../game-detail';\nimport { ActivatedRoute } from '@angular/router';\nimport { LoginService } from '../login.service';\nimport { SocialUser } from 'angular5-social-login';\n\n@Component({\n  selector: 'my-games',\n  templateUrl: './mygames.component.html',\n  styleUrls: ['./mygames.component.css']\n  })\nexport class MyGamesComponent implements OnInit {\n  constructor(private dataService:DataService, private route: ActivatedRoute, private loginService: LoginService) {\n  }\n  public gameList: GameInfo[];\n  public thisPlayer: string;\n  public otherPlayers: string;\n  public userData: SocialUser;\n\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n        const userID = params.id;\n        this.gameList = this.dataService.getGameDetails(userID);\n        this.loginService.getUser().subscribe((userData) => {this.userData = userData;});\n        console.log(this.gameList);\n        this.thisPlayer = userID;\n    });\n  }\n\n  getPlayerGist(playerList){\n    return playerList.filter(player => ((player !== this.thisPlayer) && (player !== 'Bank')));\n  }\n}","module.exports = \".toolbar{\\n    display: flex;\\n    justify-content: space-between;\\n    align-items: center;\\n    background-color: #232C3D;\\n    position: relative;\\n    z-index: 2;\\n    box-shadow: 0 2px 4px 0 #212431;\\n}\\n\\n.context {\\n    color:#11BA78;\\n}\\n\\n.mat-menu-item{\\n    color:#CCCCCC;\\n    font-size: 14px;\\n    font-weight: 600;\\n\\tline-height: 24px;\\n}\\n\\n.profile_pic {\\n    width: 30px;\\n    border-radius: 50%;   \\n    background-repeat: no-repeat;\\n    background-position: center center;\\n    background-size: cover;    \\n  }  \"","module.exports = \"<mat-toolbar class='toolbar'>\\n    <img class='profile_pic' [src]='profile_path'/>\\n    <span class='context'>{{context}}</span>\\n    <span [matMenuTriggerFor]=\\\"menu\\\" ><img class='add_new' src='../../assets/icons/add_new.png'/></span>\\n</mat-toolbar>\\n<mat-menu #menu=\\\"matMenu\\\">\\n        <button (click) = 'createGame()' mat-menu-item>Create new game </button>\\n        <mat-divider> </mat-divider>\\n        <button (click) = 'joinGame()' mat-menu-item>Join existing game</button>\\n</mat-menu>\"","import { Component, OnInit, Input, NgZone } from '@angular/core';\nimport { LoginService } from '../login.service';\nimport { SocialUser } from 'angular5-social-login';\nimport { MatDialog, MatDialogRef } from '@angular/material';\nimport { Validators, FormControl} from '@angular/forms';\nimport { DataService } from '../data.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'toolbar',\n  templateUrl: './toolbar.component.html',\n  styleUrls: ['./toolbar.component.css']\n})\n\nexport class ToolbarComponent implements OnInit {\n  public profile_path = '../../assets/images/0.jpg';\n  private createGameOptions = {\n    hasBackdrop: true,\n    disableClose: true,\n    closeOnNavigation: true,\n  };\n\n  constructor(private loginService: LoginService, private dialog: MatDialog) { }\n  userData: SocialUser;\n  @Input() context = '';\n  ngOnInit() {\n    this.loginService.getUser().subscribe((userData) => this.userData = userData);\n    this.profile_path = this.userData.image;\n  }\n  createGame() {\n    this.dialog.open(CreateGameDialog, this.createGameOptions);\n  }\n\n  joinGame() {\n    console.log('You joined');\n  }\n}\n\n\n@Component({\n  selector: 'create-game-dialog',\n  templateUrl: './create-game-dialog.component.html',\n  styleUrls: ['./create-game-dialog.component.css']\n})\nexport class CreateGameDialog implements OnInit {\n  valid = false;\n  registering = 'nostart';\n  available = false;\n  public gameName = new FormControl('', [Validators.minLength(4), Validators.required, Validators.pattern('^[A-Z\\\\a-z\\\\d]+$')]);\n  constructor(private dialogRef: MatDialogRef<CreateGameDialog>,\n     private ngZone: NgZone, private dataService: DataService,\n     private router: Router) {\n  }\n\n  ngOnInit() {\n  }\n\n  getErrorMessage() {\n    if (this.gameName.valid === true) {\n      this.valid = true;\n    }\n   return this.gameName.hasError('required') ? 'Game name cannot be empty' :\n       this.gameName.hasError('minlength') ? 'Game name must be at least 4 characters long' :\n       this.gameName.hasError('pattern') ? 'Space & special characters not allowed' :\n       this.gameName.hasError('unavailable') ? 'Game name not available' :\n       this.gameName.hasError('tryagain') ? 'Server error occured. Try again.' :\n       null;\n  }\n\n  closeDialog() {\n    this.dialogRef.close();\n  }\n\n  register(gameName: string) {\n    console.log(this.registering);\n    this.gameName.markAsTouched();\n    if (this.getErrorMessage() == null) {\n      this.dataService.checkGameAvailability(gameName).then(available => {\n        this.available = available;\n        if (this.available === true) {\n          this.registering = 'start';\n          this.dataService.createGame(gameName).then(response => {\n            console.log(response);\n            this.dialogRef.close();\n          });\n        } else {\n          this.gameName.setErrors({'unavailable' : true});\n        }\n      }).catch(err => this.gameName.setErrors({ 'tryagain' : true}));\n    }\n  }\n}","module.exports = \"body{\\n    background-image: url('transparent_background.png');\\n}\\n\\n.welcome {\\t\\n   margin-top: 10%;\\n   margin-bottom: 5%;\\n   color: #11BA78;\\tfont-family: Barlow;\\n   font-size: 20px;\\tfont-weight: 600;\\tline-height: 30px;\\ttext-align: center;}\\n\\n.profile_pic {\\n    width: 80%;\\n    border-radius: 50%;   \\n    background-repeat: no-repeat;\\n    background-position: center center;\\n    background-size: cover;  \\n    margin-top: 8%;\\n  }\\n\\n.flex_container{\\n    display: flex;\\n    flex-direction: column;\\n    align-items: center;\\n    justify-content: stretch;\\n    color: #cccccc;\\t   \\n    overflow :'auto';\\n}\\n\\n.card_container{\\n    background-color: #232C3D;\\n    box-shadow: 0 2px 4px 0 rgba(0,0,0,0.5);\\n   \\tborder-radius: 4px;\\n    margin-left:10%;\\n    margin-right:10%;\\n    margin-top:5%;\\n    /* Makes the card scrollable on smaller sized screens */\\n    overflow: auto;\\n\\n}\\n\\nh1.flex_container.mat-card-title{\\n    padding-top: 10%;\\n    padding-left: 5%;\\n    padding-right: 5%;\\n    color: #FFFFFF;\\tfont-family: Barlow;\\tfont-size: 16px;\\tfont-weight: 600;\\tline-height: 24px;\\ttext-align: center;   \\n}\\n\\nh3{\\n    margin-top: 0%\\n}\\n\\n.spinner{\\n    display: flex;\\n    flex-direction: column;\\n    align-items: center;\\n    margin: 30px;\\n}\\n\\n#register{\\n    border-radius: 4px;\\n    width:68%;\\n    margin-top:15%;\\n}\\n\\n.mat-error{\\n    margin-top:5%;\\n    color: #f44336;\\tfont-size: 12px;\\tfont-style: italic;\\tline-height: 18px;\\n}\\n\\n.mat-hint{\\n    margin-top:5%;\\n    color: #11BA78;\\tfont-size: 12px;\\tfont-style: italic;\\tline-height: 18px;\\n}\\n\\n.placeholder{\\n    color:#CCCCCC;\\n    font-weight: 600;\\tline-height: 21px;\\n}\\n\\n\"","module.exports = \"<body>\\n  <div class='welcome'>Welcome to Monopoly Payments</div>\\n  <mat-card class='card_container'>\\n    <h1 mat-card-title class='flex_container'>Give yourself a cool player name</h1>\\n    <div mat-card-content class='flex_container'>\\n        <span><img class='profile_pic' [src]='profile_path'/></span>  \\n        <h3>{{userData.name}}</h3>\\n        <mat-form-field>\\n            <input tabindex=\\\"0\\\" matInput #input minlength='4' maxlength=\\\"15\\\" [formControl]=\\\"userID\\\">\\n            <mat-placeholder class='placeholder'>Player name</mat-placeholder>\\n            <span matSuffix>{{input.value?.length || 0}}/15</span>\\n            <mat-error *ngIf=\\\"userID.invalid\\\">\\n                <img style=\\\"position:absolute;\\\" src='../../assets/icons/error.png'/>\\n                <div style=\\\"margin-left:10%;\\\">{{getErrorMessage()}}</div>\\n            </mat-error>\\n            <mat-hint *ngIf=\\\"!userID.invalid && available\\\"> \\n              <img style=\\\"position:absolute;\\\" src='../../assets/icons/success.png'/>\\n              <div style=\\\"margin-left:18%;  width: 100%;\\\">Player name available!</div>\\n            </mat-hint>\\n        </mat-form-field> \\n    </div>\\n    <span *ngIf=\\\"registering == 'nostart'\\\" mat-card-actions class='flex_container'>\\n        <button id='register' mat-raised-button color='primary' [disabled]='!userID.valid' (click)=\\\"register(input.value)\\\">CONTINUE</button>\\n    </span>\\n    <span *ngIf=\\\"registering == 'start'\\\" mat-card-actions class='spinner'>\\n            <mat-progress-spinner diameter='40'\\n            color=\\\"accent\\\"\\n            mode=\\\"indeterminate\\\">\\n            </mat-progress-spinner>\\n    </span>\\n    </mat-card >\\n</body>\"","import { Component, OnInit, NgZone } from '@angular/core';\nimport { DataService } from '../data.service';\nimport { Router } from '@angular/router';\nimport { LoginService } from '../login.service';\nimport { FormControl, Validators} from '@angular/forms';\n@Component({\n  selector: 'profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n  public profile_path = '../../assets/images/0.jpg';\n  public userData = null;\n  public registering = 'nostart';\n  public valid = false;\n  public available = false;\n  public userID = new FormControl('', [Validators.minLength(4), Validators.required, Validators.pattern('^[A-Z\\\\a-z\\\\d]+$')]);\n\n  constructor(private router: Router, private ngZone: NgZone, private loginService: LoginService, private dataService: DataService) {\n  }\n  ngOnInit() {\n    this.loginService.getUser().subscribe((userData) => {\n    this.userData = userData;\n    this.profile_path = userData.image;\n  });\n }\n\n getErrorMessage() {\n   if (this.userID.valid === true) {\n     this.valid = true;\n   }\n  return this.userID.hasError('required') ? 'Player name cannot be empty' :\n      this.userID.hasError('minlength') ? 'Player name must be at least 4 characters long' :\n      this.userID.hasError('pattern') ? 'Space & special characters not allowed' :\n      this.userID.hasError('unavailable') ? 'Player name not available' :\n      this.userID.hasError('tryagain') ? 'Server error occured. Try again.' :\n      null;\n}\n\n  register(userID: string) {\n    this.userID.markAsTouched();\n    if (this.getErrorMessage() == null) {\n      this.dataService.checkAvailability(userID).then(available => {\n        this.available = available;\n        if (this.available === true) {\n          this.registering = 'start';\n          this.dataService.createProfile(userID).then(response => {\n            console.log(response);\n            this.ngZone.run(() => {\n              this.router.navigate(['mygames', userID], { replaceUrl: true });\n            });\n          });\n        }\n        else{\n          this.userID.setErrors({'unavailable' : true});\n        }\n      }).catch(err => this.userID.setErrors({ 'tryagain' : true}));\n    }\n  }\n}\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  google_client_id: '462871257136-hedggfdor0mchtgschjj2fuv4dfphamk.apps.googleusercontent.com',\n  facebook_client_id: '261162644517129'\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}